@using Origin.YMC.Business.Entities.Domain.Patients.ViewModel
@model Origin.YMC.Business.Entities.Domain.Patients.PatientCallRequestsViewModel
@{
    /**/

    ViewBag.Title = "Partation";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ajax_Option = new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "success",
        OnFailure = "onFailure",
        OnBegin = "onBegin",
        OnComplete = "onComplete"
    };
}

<!-- /.row -->
<div id="updateUrl" class="row" style="padding-top: 12px;display: none">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="loading">
                    <div class="spinner">
                        <div class="bounce1"></div>
                        <div class="bounce2"></div>
                        <div class="bounce3"></div>
                    </div>
                </div>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Ajax.BeginForm("Update", "PatientCallRequests", ajax_Option, new { @class = "well form-group" }))
                {
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(c => c.ZoomUrl, new { @class = "col-md-2 control-label" })
                            <div class="col-md-7 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon" style="padding-right: 28px;">
                                        <i class="glyphicon glyphicon-console"></i>
                                    </span>
                                    @Html.TextBoxFor(c => c.ZoomUrl, new { @class = "form-control" })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(c => c.ZoomUrl)
                        </div>
                    </fieldset>
                    <br />
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(c => c.MeetingDate, new { @class = "col-md-2 control-label" })
                            <div class="col-md-7 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon" style="padding-right: 28px;">
                                        <i class="glyphicon glyphicon-console"></i>
                                    </span>
                                    @Html.TextBoxFor(c => c.MeetingDate, new { @class = "form-control", @type = "date" })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(c => c.MeetingDate)
                        </div>
                    </fieldset>
                    <br/>
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(c => c.MeetingTime, new { @class = "col-md-2 control-label" })
                            <div class="col-md-7 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon" style="padding-right: 28px;">
                                        <i class="glyphicon glyphicon-console"></i>
                                    </span>
                                    @Html.TextBoxFor(c => c.MeetingTime, new { @class = "form-control", @type = "time" })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(c => c.MeetingTime)
                        </div>
                    </fieldset>
                    <br />

                    @*<fieldset>
                <div class="form-group">
                    @Html.LabelFor(c => c.IsConfirmed, new { @class = "col-md-2 control-label" })
                    <div class="col-md-7 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon" style="padding-right: 28px;">
                                <i class="glyphicon glyphicon-console"></i>
                            </span>
                            @Html.CheckBoxFor(c => c.IsConfirmed, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </fieldset>*@

                    <div class="submit-row" style="float:right;">
                        @Html.HiddenFor(c => c.Id)
                        <input type="submit" class="btn btn-primary" id="btn-save" value="Save" />
                        <input type="button" class="btn btn-danger" id="btn-cancel" value="Cancel" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<br />
<div class="row">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Partition
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <table width="100%" class="table table-striped table-bordered table-hover" id="dt_Partation_bind"></table>

            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
</div>
<!-- /.col-lg-12 -->
@section Scripts{
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">

    <script>
        $(document).ready(function () {
            var table = $('#dt_Partation_bind').dataTable({
                responsive: true,
                serverSide: true,
                processing: true,
                filter: true,
                orderMulti: false,
                order: [],
                lengthMenu: [10, 25, 50, 75, 100],
                dom: 'Blfrtip',
                buttons: [
                    { extend: 'copyHtml5' },
                    { extend: 'excelHtml5' },
                    { extend: 'csvHtml5' },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        text: 'PDF',
                        titleAttr: 'PDF'
                    },
                    { extend: 'print' }
                ],
                ajax: {
                    url: "/PatientCallRequests/PageData/",
                    type: "POST"
                },
                columns: [
                    {
                        name: 'patientName',
                        data: "patientName",
                        title: "Patient Name",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return data;
                        }
                    },
                    {
                        name: 'fees',
                        data: "fees",
                        title: "Fees",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return data;
                        }
                    },
                    {
                        name: 'zoomUrl',
                        data: "zoomUrl",
                        title: "Meeting Url",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return data;
                        }
                    },
                    {
                        name: 'meetingDate',
                        data: "meetingDate",
                        title: "Meeting Date",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return data ? moment(data).format('DD-MM-YYYY'):'';
                        }
                    },
                    {
                        name: 'meetingTime',
                        data: "meetingTime",
                        title: "Meeting Time",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return data;
                        }
                    },
                    {
                        name: 'isConfirmed',
                        data: "isConfirmed",
                        title: "Is Confirmed",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return data;
                        }
                    },
                    {
                        name: 'creationDate',
                        data: "creationDate",
                        title: "Creation Date",
                        sortable: false,
                        searchable: false,
                        "render": function (data, type, row, meta) {
                            return moment(data).format('DD-MM-YYYY');
                        }
                    },
                    {
                        name: 'id',
                        data: "id",
                        title: "Action",
                        sortable: false,
                        searchable: false,
                        width: "15%",
                        "render": function (data, type, row, meta) {

                            var titleActive = row.isActive ? "Deactivate" : "Active";
                            var classCss = row.isActive ? "btn-danger" : "btn-success";

                            var result = '<a data-ajax="true" data-ajax-method="GET" data-ajax-begin="onBegin" data-ajax-complete="onComplete" data-ajax-failure="onFailure" class="btn btn-sm btn-primary" data-ajax-success="editGetSuccess(data)" style="margin-right: 10px;" href="/PatientCallRequests/Get/' + data + '">Edit</a>';
                            return result;
                        }
                    }
                ]

            });
            $.fn.dataTable.ext.errMode = 'throw';
            $('#myFilter').donetyping(function () {
                var value = $(this).val();
                $('#dt_Partation_bind').dataTable().fnFilter(value);
            });
        });

        function success() {
            $("#PartationTypeID").val("");
            $("#ContentAr").val("");
            $("#ContentEn").val("");
            $("#Id").val("");
            $("#btn-save").val("Save");
            $('#dt_Partation_bind').DataTable().ajax.reload();
            ShowTostNotification();
            $('#updateUrl').hide();

            //ScrollDown();
        }

        function editGetSuccess(data) {
            debugger;
            $("#ZoomUrl").val(data.ZoomUrl);
            $("#MeetingDate").val(data.MeetingDateStr);
            var currentTime = data.MeetingTime!=null? data.MeetingTime.Hours + ':' + data.MeetingTime.Minutes:'';

            $("#MeetingTime").val(currentTime);
            //$("#IsConfirmed").val(data.IsConfirmed);
            $("#Id").val(data.Id);
            $("#btn-save").val("Update");
            ScrollUp();
            $('#updateUrl').show();
        }

        function Active() {
            ShowTostNotification();
            $('#dt_Partation_bind').DataTable().ajax.reload();
        }

    </script>


}

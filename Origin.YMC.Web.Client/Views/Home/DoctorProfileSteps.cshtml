@using Origin.YMC.Web.Client.Models
@using Microsoft.AspNet.Identity
@model DoctorViewModels
@{
    Layout = "~/Views/Shared/_Layout_blank.cshtml";

}
<style>
    .textInput {
        background-color: white !important;
    }
</style>
<!-- #content start -->
@using (Html.BeginForm("DoctorProfileSteps", "Home", FormMethod.Post, new { enctype = "multipart/form-data", @class = "login100-form validate-form", @id = "form-doctor-step" }))
{
    @Html.AntiForgeryToken()
    <div id="content" class="content">
        <section class="patient-profile-steps-section text-center">
            <div class="container">
                <!-- .row -->
                <div class="row">
                    <div class="col-xs-12">
                        <h1 class="section-title sub-section-title fadeInLeft wow" data-wow-delay="0.5s">
                            <span class="blue-font-light sep-before">
                                @Resources.GlobalStrings.Physician_Registration
                            </span>
                        </h1>
                    </div>
                    <div class="col-xs-12">
                        <div id="wizard" class="wizard fadeInUp wow">
                            <div class="step-app">
                                <ul class="step-steps">
                                    <li>
                                        <a href="#step1">
                                            <span class="step-num">1</span>
                                            <span class="step-title text-uppercase">@Resources.GlobalStrings.Personal_Information</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a href="#step2">
                                            <span class="step-num">2</span>
                                            <span class="step-title text-uppercase">@Resources.GlobalStrings.Terms_and_Conditions</span>
                                        </a>
                                    </li>
                                </ul>
                                <div class="step-content">
                                    <div class="step-tab-panel" id="step1">
                                        <p class="note-sign text-center Reset-text">
                                            <i class="fa fa-info-circle"></i>
                                            @Resources.GlobalStrings.Please_enter_your_personal_information__All_fields_are_required
                                        </p>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label"> @Resources.GlobalStrings.Country<span class="asteriskField">*</span></label>
                                                    @Html.DropDownListFor(c => c.CountryId, new SelectList(ViewBag.countries, "Value", "Text"), new { @class = "browser-default wizard-select input-md textinput textInput" })
                                                    @Html.ValidationMessageFor(c => c.CountryId, "", new { @class = "text-danger", @style = "color: red !important;" })
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">@Resources.GlobalStrings.First_name<span class="asteriskField">*</span></label>
                                                    @Html.TextBoxFor(c => c.FirstName, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                    @Html.ValidationMessageFor(c => c.FirstName, "", new { @class = "text-danger", @style = "color: red !important;" })
                                                </div>
                                                <div class="form-inline group-7 width-7">
                                                    <div class="form-group">
                                                        <label class="control-label">@Resources.GlobalStrings.Date_of_Birth<span class="asteriskField">*</span></label>
                                                        @Html.TextBoxFor(c => c.BirthDate, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })

                                                        @Html.ValidationMessageFor(c => c.BirthDate, "", new { @class = "text-danger" })

                                                        @*@Html.TextBoxFor(c => c.Year, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Year + " - " })
                                                            @Html.TextBoxFor(c => c.Month, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Month + " - " })
                                                            @Html.TextBoxFor(c => c.Day, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Day + " - " })
                                                            @Html.ValidationMessageFor(c => c.Year, "", new { @class = "text-danger" })
                                                            @Html.ValidationMessageFor(c => c.Month, "", new { @class = "text-danger" })
                                                            @Html.ValidationMessageFor(c => c.Day, "", new { @class = "text-danger" })*@
                                                    </div>
                                                    <div class="form-group right">
                                                        <label class="control-label">@Resources.GlobalStrings.Gender<span class="asteriskField">*</span></label>
                                                        @Html.DropDownListFor(c => c.GenderId, new SelectList(Origin.YMC.Core.Content.StaticContent.GetAllGenders(), "Value", "Name"), new { @class = "browser-default wizard-select" })
                                                        @Html.ValidationMessageFor(c => c.GenderId, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">@Resources.GlobalStrings.MobileNumber<span class="asteriskField">*</span></label>
                                                    @Html.TextBoxFor(c => c.MobilePhone, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - ", id = "txtPhone" })


                                                    @Html.ValidationMessageFor(c => c.MobilePhone, "", new { @class = "text-danger", @style = "color: red;" })
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">@Resources.GlobalStrings.OnlineProfileLink<span class="asteriskField">*</span></label>
                                                    @Html.TextBoxFor(c => c.OnlineProfileLink, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                    @Html.ValidationMessageFor(c => c.OnlineProfileLink, "", new { @class = "text-danger", @style = "color: red !important;" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label">@Resources.GlobalStrings.City<span class="asteriskField">*</span></label>
                                                    @Html.DropDownListFor(x => x.CityId, new List<SelectListItem>(), " -- " + Resources.GlobalStrings.Select + " -- ", new { @id = "ddlCity", @class = "browser-default wizard-select" })
                                                    @Html.ValidationMessageFor(c => c.CityId, "", new { @class = "text-danger", @style = "color: red;" })
                                                </div>
                                                <div class="form-group required">
                                                    <label class="control-label">@Resources.GlobalStrings.Last_name<span class="asteriskField">*</span></label>
                                                    @Html.TextBoxFor(c => c.LastName, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                    @Html.ValidationMessageFor(c => c.LastName, "", new { @class = "text-danger", @style = "color: red;" })
                                                </div>
                                                <div class="form-group required">
                                                    <label for="selectId" class="control-label"> @Resources.GlobalStrings.How_You_Heard_About_Us <span class="asteriskField">*</span></label>
                                                    @Html.DropDownListFor(c => c.HeardAboutUsId, new SelectList(Origin.YMC.Core.Content.StaticContent.GetAllHeardAboutUs(), "Value", "Name"), new { @class = "browser-default wizard-select" })
                                                    @Html.ValidationMessageFor(c => c.HeardAboutUsId, "", new { @class = "text-danger", @style = "color: red;" })
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">
                                                        @Resources.GlobalStrings.Billing_Address<span class="asteriskField">*</span>
                                                    </label>
                                                    @Html.TextBoxFor(c => c.Address1, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                    @Html.ValidationMessageFor(c => c.Address1, "", new { @class = "text-danger", @style = "color: red;" })
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">
                                                        @Resources.GlobalStrings.Work_Address<span class="asteriskField">*</span>
                                                    </label>
                                                    @Html.TextBoxFor(c => c.Address2, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                    @Html.ValidationMessageFor(c => c.Address2, "", new { @class = "text-danger", @style = "color: red;" })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-10">
                                                <h3 class="text-left Upload-title blue-font-bold m-b-10"><img data-toggle="tooltip" data-placement="top" title="@Resources.GlobalStrings.kindlyUploadDocuments" class="secton-icon" src="~/Content/img/certifications-icon.png" /> @Resources.GlobalStrings.Upload_Certifications</h3>
                                                <div class="input-group">
                                                    <ul id="imgs" class="imgs-uploaded-list"></ul>
                                                </div>
                                                @*<ul class="docs-list text-left" id="ulcertificationImages"></ul>*@
                                                <div class="form-group">
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                @*<button class="delete-section-btn">Delet Section</button>*@
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-10">
                                                @*<a class="text-center drop-btn">Drag and drop or click here</a>*@
                                                <label class="input-group-btn"></label>


                                                <div class="dropzone" id="btnUploadPIC">
                                                    <input type="file" multiple="multiple" style="visibility:hidden" value="" />
                                                </div>
                                                <span id="lblErrUploadCerts" class="lblErrUploadCerts" style="display:none;color:red !important;">@Resources.GlobalStrings.kindlyUploadDocuments</span>
                                            </div>
                                        </div>
                                        @*<div class="row">
                                                    <div class="col-md-10">
                                                        <h3 class="text-left Upload-title text-uppercase">Upload Profile Image </h3>


                                                        <div class="input-group">

                                                        </div>

                                                    </div>
                                                    <div class="col-md-2">
                                                        @*<button class="delete-section-btn">Delet Section</button>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-10">
                                                        @*<a class="text-center drop-btn">Drag and drop or click here</a>
                                                        <label class="input-group-btn"></label>
                                                        @Html.TextBoxFor(c => c.ProfileImage, new { id = "btnUploadProfilePIC", @type = "file" })
                                                        @Html.ValidationMessageFor(c => c.ProfileImage, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            <div class="seprate-div">
                                            </div>*@
                                        <div class="row">
                                            <div class="col-md-12">
                                                <h3 class="text-left Upload-title blue-font-boldtext-left Upload-title blue-font-bold"><img class="secton-icon" src="~/Content/img/Experiences-icon.png" /> @Resources.GlobalStrings.Experinces</h3>
                                                <div class="Experiences-item-container" id="divExp_doc">
                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-10">
                                                <div class="dashed-wrap">
                                                    <input class="input-md Work-Place textinput textInput form-control" placeholder="- @Resources.GlobalStrings.Work_Place -" type="text" id="txtExpWorkPlace">
                                                    <br />
                                                    <textarea class="input-md Work-Place textinput textInput form-control" placeholder="- @Resources.GlobalStrings.Description -" type="text" id="txtDescription" cols="10" rows="5"></textarea>
                                                    <a class="text-center drop-btn Description-btn" onclick="addExpDoctor()">@Resources.GlobalStrings.Add_New_Experience_Description</a>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                @*<button type="button" class="delete-section-btn newsection-btn" onclick="()">New Section</button>*@
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-10">
                                                <h3 class="text-left Upload-title blue-font-boldtext-left Upload-title blue-font-bold"><img class="secton-icon" src="~/Content/img/References-icon.png" /> @Resources.GlobalStrings.References</h3>
                                                <div class="dashed-wrap">
                                                    <div class="con-ex">
                                                        <ul class="ref refrance-list" id="ulRef_Info">
                                                            <li>
                                                                <label>
                                                                    <input class="input-md textinput textInput form-control" placeholder="@Resources.GlobalStrings.Reference_Name" type="text" id="txtrefName">
                                                                </label>
                                                                <span><input class="input-md Work-Place textinput textInput form-control" placeholder="@Resources.GlobalStrings.Reference_Contact" type="text" id="txtrefContact"></span>
                                                                <a href="javascript:void(0)" class="text-center drop-btn Description-btn addRefances-btn" onclick="addRefances()">
                                                                    @Resources.GlobalStrings.Add_Reference
                                                                </a>
                                                            </li>


                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="step-tab-panel" id="step2">
                                        <div class="space-txt">
                                        </div>
                                        <div class="to-be-shown text-center">
                                            <h2 class="text-center text-uppercase">@Resources.GlobalStrings.successful_registration</h2>
                                            <img src="/Content/img/checked.png" class="img-responsive">
                                            <div>
                                                <a href="#" class="login100-form-btn">@Resources.GlobalStrings.Go_to_My_Profile</a>
                                            </div>
                                        </div>
                                        <div class="to-be-hidden">
                                            <p class="note-sign text-center Reset-text">
                                                <i class="fa fa-info-circle"></i>
                                                @Resources.GlobalStrings.Please_enter_your_account_information_All_fields_are_required.
                                            </p>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label"> @Resources.GlobalStrings.Email<span class="asteriskField">*</span></label>
                                                        <input class="input-md textinput textInput form-control" placeholder="- @Resources.GlobalStrings.Enter -" type="email" value="@ViewBag.userEmail">
                                                    </div>
                                                    @*<div class="form-group">
                                                            <label class="control-label">Password</label>
                                                            @Html.PasswordFor(c => c.Password, new { @class = "input-md textinput textInput form-control", placeholder = "- Enter -" })
                                                            @Html.ValidationMessageFor(c => c.Password, "", new { @class = "text-danger" })
                                                        </div>*@
                                                    <div class="form-group">
                                                        <label class="control-label">@Resources.GlobalStrings.Security_Question_1</label>
                                                        @Html.DropDownListFor(c => c.SecurityQuestionId, new SelectList(Origin.YMC.Core.Content.StaticContent.GetAllSecurityQuestions(), "Value", "Name"), new { @class = "browser-default wizard-select" })
                                                        @Html.ValidationMessageFor(c => c.SecurityQuestionId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group ">
                                                        <label class="control-label"> @Resources.GlobalStrings.Retype_Email</label>
                                                        <input class="input-md textinput textInput form-control" placeholder="- @Resources.GlobalStrings.Enter -" type="email" value="@ViewBag.userEmail">
                                                    </div>
                                                    @*<div class="form-group required">
                                                            <label class="control-label">Retype Password</label>
                                                            @Html.PasswordFor(c => c.ConfirmPassword, new { @class = "input-md textinput textInput form-control", placeholder = "- Enter -" })
                                                            @Html.ValidationMessageFor(c => c.ConfirmPassword, "", new { @class = "text-danger" })
                                                        </div>*@
                                                    <div class="form-group required">
                                                        <label for="selectId" class="control-label">@Resources.GlobalStrings.Answer <span class="asteriskField">*</span></label>
                                                        @Html.TextBoxFor(c => c.SecurityQuestionAnswer, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.SecurityQuestionAnswer, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <h4 class="text-left text-uppercase information-title">@Resources.GlobalStrings.Bank_information <span class="deposit">@Resources.GlobalStrings.We_will_use_this_data_to_deposit_your_amounts</span></h4>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <ul class="money-list">
                                                        <li><img src="/Content/img/money-pay/mastercard.png" class="img-responsive"></li>
                                                        <li><img src="/Content/img/money-pay/ebay.png" class="img-responsive"></li>
                                                        <li><img src="/Content/img/money-pay/visa.png" class="img-responsive"></li>
                                                        <li><img src="/Content/img/money-pay/hsbc.png" class="img-responsive"></li>
                                                        <li><img src="/Content/img/money-pay/paypal.png" class="img-responsive"></li>
                                                        <li><img src="/Content/img/money-pay/express.png" class="img-responsive"></li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label class="control-label">
                                                            @Resources.GlobalStrings.Cardholder_Full_Name
                                                        </label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoCardholderFullName, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoCardholderFullName, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">@Resources.GlobalStrings.Credit_Card_Number</label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoCreditCardNumber, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoCreditCardNumber, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">@Resources.GlobalStrings.CVV</label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoCVV, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoCVV, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label"> @Resources.GlobalStrings.Address_1</label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoAddress1, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoAddress1, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label"> @Resources.GlobalStrings.City</label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoCity, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoCity, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group ">
                                                        <label class="control-label"> @Resources.GlobalStrings.Credit_Card_Type</label>
                                                        @Html.DropDownListFor(c => c.PaymentInfoCreditCardType, new SelectList(Origin.YMC.Core.Content.StaticContent.GetAllCreditCardType(), "Value", "Name"), new { @class = "browser-default wizard-select" })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoCreditCardType, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group required">
                                                        <label class="control-label">@Resources.GlobalStrings.Expiration_Date</label>
                                                        <select name="PaymentInfoExpirationMonth" style="width:10%">
                                                            @for (int i = 1; i <= 12; i++)
                                                            {
                                                                <option value="@(i < 10 ? ("0"+i):i.ToString())">@(i < 10 ? ("0" + i) : i.ToString())</option>
                                                            }
                                                        </select>
                                                        &nbsp;/&nbsp;
                                                        <select name="PaymentInfoExpirationYear" style="width:10%">
                                                            @for (int i = 20; i <= 40; i++)
                                                            {
                                                                <option value="@(i.ToString())">@(i.ToString())</option>
                                                            }
                                                        </select>

                                                        &nbsp; Month/Year
                                                        @*@Html.TextBoxFor(c => c.PaymentInfoExpirationDate, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })*@
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoExpirationMonth, "", new { @class = "text-danger", @style = "color: red;" })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoExpirationYear, "", new { @class = "text-danger", @style = "color: red;" })

                                                    </div>
                                                    <div class="form-group required">
                                                        <label for="selectId" class="control-label">@Resources.GlobalStrings.Country </label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoCountry, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoCountry, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label"> @Resources.GlobalStrings.Address_2</label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoAddress2, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoAddress2, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">@Resources.GlobalStrings.State</label>
                                                        @Html.TextBoxFor(c => c.PaymentInfoState, new { @class = "input-md textinput textInput form-control", placeholder = " - " + Resources.GlobalStrings.Enter + " - " })
                                                        @Html.ValidationMessageFor(c => c.PaymentInfoState, "", new { @class = "text-danger", @style = "color: red;" })
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="step-footer">
                                    <input type="hidden" id="hdnExperinces" name="Experinces" value="" />
                                    <input type="hidden" id="hdnRefrances" name="Refrances" value="" />
                                    <input type="hidden" id="hdnCertificates" name="AttachmentCertificates" value="" />


                                    <button data-direction="next" class="login100-form-btn nxt-stp">@Resources.GlobalStrings.nextAccount_Information</button>
                                    <button data-direction="finish" class="login100-form-btn" id="btn_doc_step_submit">@Resources.GlobalStrings.Finish</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}
<!-- #content -->

@section Scripts{
    <script src="~/Content/js/doctor-profile-steps-call.js"></script>
    <script src="~/Content/js/intlTelInput.min.js"></script>

    <script src="~/Content/js/utils.js"></script>
    <script>
        var phoneTel = intlTelInput($("#txtPhone")[0], { nationalMode: true })
        $("#txtPhone")[0].addEventListener("countrychange", function () {
            $("#txtPhone").val(phoneTel.getNumber(intlTelInputUtils.numberFormat.E164))
        });
        $("#txtPhone").on("change", function () {
            $("#txtPhone").val(phoneTel.getNumber(intlTelInputUtils.numberFormat.E164))
        })
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
    <script type="text/javascript">


        var doctorRefrance = [];
        var doctorExper = [];
        var count = 1;
        var dt = new DataTransfer();
        $(document).ready(function () {
            flatpickr("#BirthDate", {
                altInput: true,
                altFormat: "F j, Y",
                dateFormat: "m/d/y",
            });
            flatpickr("#PaymentInfoExpirationDate", {
                altInput: true,
                altFormat: "F j, Y",
                dateFormat: "m/d/y",
            });

            $('#CountryId').change(function () {
                $.ajax({
                    type: "post",
                    url: "/Home/GetCities",
                    data: { countryCode: $('#CountryId').val() },
                    datatype: "json",
                    traditional: true,
                    success: function (cities) {
                        $('#ddlCity').empty();
                        $.each(cities, function (index, item) {
                            $('#ddlCity').append('<option value=' + item.Value + '>' + item.Text + ' </option>');
                        });
                    }
                });
            });
            var displayOnce = false;

            @*$(":file").filestyle({
                dragdrop: true,
                text: '@Resources.GlobalStrings.Drag_and_drop_or_click_here',
                badge: true,
                btnClass: "text-center drop-btn",
                placeholder: "No file",
                'onChange': function (files) {
                    $('#ulcertificationImages').html("");
                    var files = $('#btnUploadPIC').prop("files")
                    for (var i = 0; i < files.length; i++) {
                        if (files && files[i]) {
                            var reader = new FileReader();
                            displayOnce = true;
                            currentFile = files[i];
                            dt.items.add(currentFile);

                              reader.onload =   (function (theFile) {
                                    var fileName = theFile.name;
                                    return function (e) {
                                        if (e.target.result.indexOf("application/pdf") > -1) {
                                             $('#ulcertificationImages').append('<li><a href="' + e.target.result + '" target="_blank"><img src="/Content/img/documnet.png" class="img-responsive" style="box-shadow:none;width:90px;" /><a class="close-btn-cir" data-name="' + fileName + '"   href="javascript:void(0);" onclick="deleteFile(this)" ></a><span>' + fileName + '</span>  </a> </li>');
                                         } else if (e.target.result.indexOf("image/") > -1) {
                                             $('#ulcertificationImages').append('<li><img src="' + e.target.result + '" class="img-responsive"/><a class="close-btn-cir" data-name="' + fileName + '"   href="javascript:void(0);" onclick="deleteFile(this)" ></a><span>' + fileName + '</span></li>');
                                         } else if (e.target.result.indexOf("officedocument") > -1) {
                                             $('#ulcertificationImages').append('<li><a href="' + e.target.result + '" target="_blank"><img src="/Content/img/word-document-icon.png" class="img-responsive" style="box-shadow:none;width:90px;" /><a class="close-btn-cir" data-name="' + fileName + '"   href="javascript:void(0);" onclick="deleteFile(this)" ></a><span>' + fileName + '</span> </a></li>');
                                         }
                                    };
                                })(currentFile);

                            reader.readAsDataURL(currentFile);
                        }
                    }
                }
            });*@



            //$('#btnUploadPIC').change(function (e) {
            //    if (displayOnce == false) {
            //        $('#ulcertificationImages').html("");
            //        for (var i = 0; i < e.target.files.length; i++) {
            //            if (e.target.files && e.target.files[i]) {
            //                var reader = new FileReader();
            //               currentFile = files[i];
            //                dt.items.add(currentFile);

            //                  reader.onload =   (function (theFile) {
            //                        var fileName = theFile.name;
            //                        return function (e) {
            //                            if (e.target.result.indexOf("application/pdf") > -1) {
            //                                 $('#ulcertificationImages').append('<li><a href="' + e.target.result + '" target="_blank"><img src="/Content/img/documnet.png" class="img-responsive" style="box-shadow:none;width:90px;" /><a class="close-btn-cir" data-name="' + fileName + '"   href="javascript:void(0);" onclick="deleteFile(this)" ></a><span>' + fileName + '</span>  </a> </li>');
            //                             } else if (e.target.result.indexOf("image/") > -1) {
            //                                 $('#ulcertificationImages').append('<li><img src="' + e.target.result + '" class="img-responsive"/><a class="close-btn-cir" data-name="' + fileName + '"   href="javascript:void(0);" onclick="deleteFile(this)" ></a><span>' + fileName + '</span></li>');
            //                             } else if (e.target.result.indexOf("officedocument") > -1) {
            //                                 $('#ulcertificationImages').append('<li><a href="' + e.target.result + '" target="_blank"><img src="/Content/img/word-document-icon.png" class="img-responsive" style="box-shadow:none;width:90px;" /><a class="close-btn-cir" data-name="' + fileName + '"   href="javascript:void(0);" onclick="deleteFile(this)" ></a><span>' + fileName + '</span> </a></li>');
            //                             }
            //                        };
            //                    })(currentFile);

            //                reader.readAsDataURL(currentFile);
            //            }
            //        }
            //    } else {
            //        displayOnce = false;
            //    }
            //});
            Dropzone.options.maxFilesize = 4;
            var myDropzone = new Dropzone("div#btnUploadPIC", { url: "/home/uploadcertificate", method: "post" , dictDefaultMessage: "@Resources.GlobalStrings.Drag_and_drop_or_click_here" })
            myDropzone.on("complete", function (file) {
                var pdfType = "application/pdf";
                var wordType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
                var imageType = "image";
                var iconPath = "";
                if (file.type.toLowerCase().indexOf(pdfType) > -1) {
                    iconPath = "/Content/img/documnet.png";
                } else if (file.type.toLowerCase().indexOf(imageType) > -1) {
                    iconPath = file.xhr.response;

                } else if (file.type.toLowerCase().indexOf(wordType) > -1) {
                    iconPath = "/content/img/word-document-icon.png"

                } else {
                    iconPath = "/content/img/certifications-icon.png";
                }
                if (file.size <= Dropzone.options.maxFilesize * 1024 * 1024) {

                    $("#imgs").append("<li style='position: relative;display: inline-block;float: left;width: 100px;'><span class='fa fa-close' style='position: absolute;left: 20px;background-color:white;' onclick='$(this).parent().remove();'></span><a href='" + file.xhr.response + "' target='_blank'><img src='" + iconPath + "' data-fpath='" + file.xhr.response + "' width='70' height='70' /></a></li>")
                myDropzone.removeFile(file);
                    $("#lblErrUploadCerts").hide();
                }

            });
            myDropzone.on("error", function (file) {
                myDropzone.removeFile(file);
                 toastr.error("@Resources.GlobalStrings.YourAreExcedMaxSize ")
            });
            //$("div#btnUploadPIC").on("complete", function (file) {

            //})
            $("#btn_doc_step_submit").click(function (e) {
                var isValid = true;

                $("#imgs").find("img").each(function () {
                    $("#hdnCertificates").val($("#hdnCertificates").val() + ";#" + $(this).attr("data-fpath"));
                })
                if ($("#hdnCertificates").val() == "") {
                    $("#lblErrUploadCerts").show();
                    isValid = false;
                } else {
                    $("#lblErrUploadCerts").hide();
                }
                $.each($("#form-doctor-step").find('input, select'), function () {

                    if (!$(this).valid()) {
                        isValid = false;
                    }
                });
                if (isValid) {
                    document.getElementById('form-doctor-step').submit();
                } else {
                    e.preventDefault();
                }

            });
        });

        function addRefances() {
            var name = $('#txtrefName').val();
            var contact = $('#txtrefContact').val();
            var refancesStr = "";
            doctorRefrance.push({ "id": count, "name": name, "contact": contact });


            $("#ulRef_Info").append('<li><label>' + name + ' </label><span>' + contact + '</span><a href="javascript:void(0)" class="text-center drop-btn Description-btn addRefances-btn deleteRefances-btn" data-id="' + count + '" onclick="removeRefrances(this);">@Resources.GlobalStrings.Delete_Reference</a></li>');
            $('#txtrefName').val("");
            $('#txtrefContact').val("");
            count++;

            $.each(doctorRefrance, function (index, item) {
                refancesStr += item.name + "-" + item.contact + ";#";

            })
            $("#hdnRefrances").val(refancesStr);
        }

        function addExpDoctor() {
            var workPlace = $('#txtExpWorkPlace').val();
            var description = $('#txtDescription').val();
            var expStr = "";
            doctorExper.push({ "id": "Div_exp" + count, "workPlace": workPlace, "description": description });


            $("#divExp_doc").append('<div id="Div_exp' + count + '" class="col-md-10 con-ex  experience-item"><h4 class="text-left Experinces-title">' + workPlace + '</h4><p style="white-space: pre-wrap;">' + description + '</p></div><div class="col-md-2 btn-delete-Experinces-container"><button type="button"  class="text-center drop-btn Description-btn addRefances-btn deleteRefances-btn deleteExperience-btn" onclick="removeExp(this);" data-id="Div_exp' + count + '">@Resources.GlobalStrings.Delete_Experience</button></div>');
            $('#txtExpWorkPlace').val("");
            $('#txtDescription').val("");
            count++;

            $.each(doctorExper, function (index, item) {
                expStr += item.workPlace + "<br/>" + item.description + ";#";
            })
            $("#hdnExperinces").val(expStr);
        }

        function removeRefrances(elem) {
            $(elem).closest('li').remove();
            var id = $(elem).attr("data-id");

            doctorRefrance = $.grep(doctorRefrance, function (e) {
                return e.id != id;
            });
        }

        function removeExp(elem) {

            var id = $(elem).attr("data-id");
            $(elem).parents('.btn-delete-Experinces-container').remove();
            $("#" + id).remove();
            $(elem).reelemmove();
            doctorExper = $.grep(doctorExper, function (e) {
                return e.id != id;
            });
        }

        function getRandomInt(min, max) {
            min = Math.ceil(min);
            max = Math.floor(max);
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }




    </script>
}